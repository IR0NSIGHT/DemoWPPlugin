/*
 * The MIT License
 *
 * Copyright 2025 Max1M.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.ironsight.wpplugin.expandLayerTool.Gui;

import org.checkerframework.checker.units.qual.A;
import org.checkerframework.checker.units.qual.K;
import org.ironsight.wpplugin.expandLayerTool.operations.ApplyAction;
import org.ironsight.wpplugin.expandLayerTool.operations.Gradient;
import org.ironsight.wpplugin.expandLayerTool.operations.LayerMapping;
import org.pepsoft.worldpainter.layers.DeciduousForest;
import org.pepsoft.worldpainter.layers.Frost;
import org.pepsoft.worldpainter.panels.DefaultFilter;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.function.Consumer;

/**
 * @author Max1M
 */
public class ApplyActionOptionsEditorPanel extends javax.swing.JPanel {

    private final ApplyActionOptions options;
    private final Consumer<ApplyActionOptions> onOptionsChanged;

    static Gradient grad;

    public static void main(String[] args) {
        // Create the frame
        JFrame frame = new JFrame("Minimal Example");
        frame.setSize(new Dimension(800, 400));


        JPanel basePanel = new JPanel(new GridLayout(0, 1));
        basePanel.add(new JLabel("Global Operations"));


        JButton executeButton = new JButton("execute");
        executeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

            }
        });
         basePanel.add(new JButton(""));


        frame.add(basePanel);

        // Set the default close operation
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Center the frame on the screen
        frame.setLocationRelativeTo(null);

        // Make the frame visible
        frame.setVisible(true);
    }

    /**
     * Creates new form ApplyAction
     */
    public ApplyActionOptionsEditorPanel(ApplyActionOptions options, Consumer<ApplyActionOptions> onOptionsChanged) {
        this.options = options;
        this.onOptionsChanged = onOptionsChanged;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxLayerType = new javax.swing.JComboBox<>();
        jLabelLayerText = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxActionType = new javax.swing.JComboBox<>(new ApplyActionOptions.ActionTypeComboModel());
        jSpinnerActionValue = new javax.swing.JSpinner();

        jComboBoxLayerType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Annotations", "Selection",
                "Deciduous", "Pine"}));
        jComboBoxLayerType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLayerTypeActionPerformed(evt);
            }
        });

        jLabelLayerText.setText("Layer");

        jComboBoxActionType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionTypeActionPerformed(evt);
            }
        });

        jSpinnerActionValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerActionValueStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabelLayerText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jComboBoxLayerType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jComboBoxActionType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jSpinnerActionValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(121, 121, 121).addComponent(jLabel2).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabelLayerText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jComboBoxLayerType, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jComboBoxActionType, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jSpinnerActionValue)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxLayerTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST
        // :event_jComboBoxLayerTypeActionPerformed
        // TODO add your handling code here:
    }

    private void jComboBoxActionTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST
        // :event_jComboBoxActionTypeActionPerformed
        // TODO add your handling code here:
    }

    private void jSpinnerActionValueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST
        // :event_jSpinnerActionValueStateChanged
        // TODO add your handling code here:
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<ApplyActionOptions.ActionType> jComboBoxActionType;
    private javax.swing.JComboBox<String> jComboBoxLayerType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelLayerText;
    private javax.swing.JSpinner jSpinnerActionValue;
    // End of variables declaration//GEN-END:variables
}
